name: Changesets

on:
  push:
    branches:
      - main
      - next
    paths:
      -  '.changeset/*'

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  CI: true

jobs:
  # Update package versions from changesets.
  version:
    timeout-minutes: 14
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/node
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}

      - run: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
        shell: bash
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - run: pnpm boot --ignore-scripts

      - run: pnpm build

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm ci:version
          publish: pnpm ci:publish
          commit: 'chore(release): prepare monorepo npm packages'
          title: 'ci: Upcoming Release Changes'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          
#      - name: Generate Notification
#        id: notification
#        if: steps.changesets.outputs.published == 'true'
#        run: message=$(node scripts/notify/index.js '${{ steps.changesets.outputs.publishedPackages }}') && echo ::set-output name=message::${message//$'\n'/'%0A'}
#
#      - name: Discord Notification
#        if: steps.changesets.outputs.published == 'true'
#        id: discord-notification
#        env:
#          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
#        uses: Ilshidur/action-discord@0.3.2
#        with:
#          args: ${{ steps.notification.outputs.message }}
