package manifest

import (
	"bytes"
	"encoding/json"
	"testing"

	"github.com/sebdah/goldie"
	"github.com/stretchr/testify/assert"

	"github.com/wundergraph/wundergraph/pkg/v2wundergraphapi"
)

func TestManifestRenderIntegrations(t *testing.T) {
	var manifest Manifest
	dependencies := []*v2wundergraphapi.ApiDependency{
		{
			Organization:        "wundergraph",
			Name:                "spacex",
			Keywords:            []string{"spacex"},
			ShortDescription:    "The SpaceX API",
			MarkdownDescription: "# SpaceX API\n\nThis is a simple API for SpaceX.",
			Definition:          json.RawMessage(`{"DefaultFlushInterval":500,"Schema":"type Query{\"\"\"fetch data from the table: \"users\"\n\"\"\" users(\"\"\"distinct select on columns\"\"\" distinct_on:[users_select_column!]\"\"\"limit the nuber of rows returned\"\"\" limit:Int \"\"\"skip the first n rows. Use only with order_by\"\"\" offset:Int \"\"\"sort the rows by one or more columns\"\"\" order_by:[users_order_by!]\"\"\"filter the rows returned\"\"\" where:users_bool_exp):[users!]!\"\"\"fetch aggregated fields from the table: \"users\"\n\"\"\" users_aggregate(\"\"\"distinct select on columns\"\"\" distinct_on:[users_select_column!]\"\"\"limit the nuber of rows returned\"\"\" limit:Int \"\"\"skip the first n rows. Use only with order_by\"\"\" offset:Int \"\"\"sort the rows by one or more columns\"\"\" order_by:[users_order_by!]\"\"\"filter the rows returned\"\"\" where:users_bool_exp):users_aggregate!\"\"\"fetch data from the table: \"users\" using primary key columns\"\"\" users_by_pk(id:uuid!):users capsules(find:CapsulesFind limit:Int offset:Int order:String sort:String):[Capsule]capsulesPast(find:CapsulesFind limit:Int offset:Int order:String sort:String):[Capsule]capsulesUpcoming(find:CapsulesFind limit:Int offset:Int order:String sort:String):[Capsule]capsule(id:ID!):Capsule company:Info cores(find:CoresFind limit:Int offset:Int order:String sort:String):[Core]coresPast(find:CoresFind limit:Int offset:Int order:String sort:String):[Core]coresUpcoming(find:CoresFind limit:Int offset:Int order:String sort:String):[Core]core(id:ID!):Core dragons(limit:Int offset:Int):[Dragon]dragon(id:ID!):Dragon histories(find:HistoryFind limit:Int offset:Int order:String sort:String):[History]historiesResult(find:HistoryFind limit:Int offset:Int order:String sort:String):HistoriesResult history(id:ID!):History landpads(limit:Int offset:Int):[Landpad]landpad(id:ID!):Landpad launches(find:LaunchFind limit:Int offset:Int order:String sort:String):[Launch]launchesPast(find:LaunchFind limit:Int offset:Int order:String sort:String):[Launch]launchesPastResult(find:LaunchFind limit:Int offset:Int order:String sort:String):LaunchesPastResult launchesUpcoming(find:LaunchFind limit:Int offset:Int order:String sort:String):[Launch]launch(id:ID!):Launch launchLatest(offset:Int):Launch launchNext(offset:Int):Launch launchpads(limit:Int offset:Int):[Launchpad]launchpad(id:ID!):Launchpad missions(find:MissionsFind limit:Int offset:Int):[Mission]missionsResult(find:MissionsFind limit:Int offset:Int):MissionResult mission(id:ID!):Mission payloads(find:PayloadsFind limit:Int offset:Int order:String sort:String):[Payload]payload(id:ID!):Payload roadster:Roadster rockets(limit:Int offset:Int):[Rocket]rocketsResult(limit:Int offset:Int):RocketsResult rocket(id:ID!):Rocket ships(find:ShipsFind limit:Int offset:Int order:String sort:String):[Ship]shipsResult(find:ShipsFind limit:Int offset:Int order:String sort:String):ShipsResult ship(id:ID!):Ship}\"\"\"select columns of table \"users\"\n\"\"\" enum users_select_column{\"\"\"column name\"\"\" id \"\"\"column name\"\"\" name \"\"\"column name\"\"\" rocket \"\"\"column name\"\"\" timestamp \"\"\"column name\"\"\" twitter}\"\"\"ordering options when selecting data from \"users\"\n\"\"\" input users_order_by{id:order_by name:order_by rocket:order_by timestamp:order_by twitter:order_by}\"\"\"column ordering options\"\"\" enum order_by{\"\"\"in the ascending order, nulls last\"\"\" asc \"\"\"in the ascending order, nulls first\"\"\" asc_nulls_first \"\"\"in the ascending order, nulls last\"\"\" asc_nulls_last \"\"\"in the descending order, nulls first\"\"\" desc \"\"\"in the descending order, nulls first\"\"\" desc_nulls_first \"\"\"in the descending order, nulls last\"\"\" desc_nulls_last}\"\"\"Boolean expression to filter rows from the table \"users\". All fields are combined with a logical 'AND'.\"\"\" input users_bool_exp{_and:[users_bool_exp]_not:users_bool_exp _or:[users_bool_exp]id:uuid_comparison_exp name:String_comparison_exp rocket:String_comparison_exp timestamp:timestamptz_comparison_exp twitter:String_comparison_exp}\"\"\"expression to compare columns of type uuid. All fields are combined with logical 'AND'.\"\"\" input uuid_comparison_exp{_eq:uuid _gt:uuid _gte:uuid _in:[uuid!]_is_null:Boolean _lt:uuid _lte:uuid _neq:uuid _nin:[uuid!]}scalar uuid \"\"\"expression to compare columns of type String. All fields are combined with logical 'AND'.\"\"\" input String_comparison_exp{_eq:String _gt:String _gte:String _ilike:String _in:[String!]_is_null:Boolean _like:String _lt:String _lte:String _neq:String _nilike:String _nin:[String!]_nlike:String _nsimilar:String _similar:String}\"\"\"expression to compare columns of type timestamptz. All fields are combined with logical 'AND'.\"\"\" input timestamptz_comparison_exp{_eq:timestamptz _gt:timestamptz _gte:timestamptz _in:[timestamptz!]_is_null:Boolean _lt:timestamptz _lte:timestamptz _neq:timestamptz _nin:[timestamptz!]}scalar timestamptz \"\"\"columns and relationships of \"users\"\n\"\"\" type users{id:uuid!name:String rocket:String timestamp:timestamptz!twitter:String}\"\"\"aggregated selection of \"users\"\n\"\"\" type users_aggregate{aggregate:users_aggregate_fields nodes:[users!]!}\"\"\"aggregate fields of \"users\"\n\"\"\" type users_aggregate_fields{count(columns:[users_select_column!]distinct:Boolean):Int max:users_max_fields min:users_min_fields}\"\"\"aggregate max on columns\"\"\" type users_max_fields{name:String rocket:String timestamp:timestamptz twitter:String}\"\"\"aggregate min on columns\"\"\" type users_min_fields{name:String rocket:String timestamp:timestamptz twitter:String}\"\"\"\"\"\" input CapsulesFind{id:ID landings:Int mission:String original_launch:Date reuse_count:Int status:String type:String}scalar Date type Capsule{id:ID landings:Int missions:[CapsuleMission]original_launch:Date reuse_count:Int status:String type:String dragon:Dragon}type CapsuleMission{flight:Int name:String}type Dragon{active:Boolean crew_capacity:Int description:String diameter:Distance dry_mass_kg:Int dry_mass_lb:Int first_flight:String heat_shield:DragonHeatShield height_w_trunk:Distance id:ID launch_payload_mass:Mass launch_payload_vol:Volume name:String orbit_duration_yr:Int pressurized_capsule:DragonPressurizedCapsule return_payload_mass:Mass return_payload_vol:Volume sidewall_angle_deg:Float thrusters:[DragonThrust]trunk:DragonTrunk type:String wikipedia:String}type Distance{feet:Float meters:Float}type DragonHeatShield{dev_partner:String material:String size_meters:Float temp_degrees:Int}type Mass{kg:Int lb:Int}type Volume{cubic_feet:Int cubic_meters:Int}type DragonPressurizedCapsule{payload_volume:Volume}type DragonThrust{amount:Int fuel_1:String fuel_2:String pods:Int thrust:Force type:String}type Force{kN:Float lbf:Float}type DragonTrunk{cargo:DragonTrunkCargo trunk_volume:Volume}type DragonTrunkCargo{solar_array:Int unpressurized_cargo:Boolean}type Info{ceo:String coo:String cto_propulsion:String cto:String employees:Int founded:Int founder:String headquarters:Address launch_sites:Int links:InfoLinks name:String summary:String test_sites:Int valuation:Float vehicles:Int}type Address{address:String city:String state:String}type InfoLinks{elon_twitter:String flickr:String twitter:String website:String}\"\"\"\"\"\" input CoresFind{asds_attempts:Int asds_landings:Int block:Int id:String missions:String original_launch:Date reuse_count:Int rtls_attempts:Int rtls_landings:Int status:String water_landing:Boolean}type Core{asds_attempts:Int asds_landings:Int block:Int id:ID missions:[CapsuleMission]original_launch:Date reuse_count:Int rtls_attempts:Int rtls_landings:Int status:String water_landing:Boolean}\"\"\"\"\"\" input HistoryFind{end:Date flight_number:Int id:ID start:Date}type History{details:String event_date_unix:Date event_date_utc:Date id:ID links:Link title:String flight:Launch}type Link{article:String reddit:String wikipedia:String}type Launch{details:String id:ID is_tentative:Boolean launch_date_local:Date launch_date_unix:Date launch_date_utc:Date launch_site:LaunchSite launch_success:Boolean launch_year:String links:LaunchLinks mission_id:[String]mission_name:String rocket:LaunchRocket static_fire_date_unix:Date static_fire_date_utc:Date telemetry:LaunchTelemetry tentative_max_precision:String upcoming:Boolean ships:[Ship]}type LaunchSite{site_id:String site_name_long:String site_name:String}type LaunchLinks{article_link:String flickr_images:[String]mission_patch_small:String mission_patch:String presskit:String reddit_campaign:String reddit_launch:String reddit_media:String reddit_recovery:String video_link:String wikipedia:String}type LaunchRocket{fairings:LaunchRocketFairings first_stage:LaunchRocketFirstStage rocket_name:String rocket_type:String rocket:Rocket second_stage:LaunchRocketSecondStage}type LaunchRocketFairings{recovered:Boolean recovery_attempt:Boolean reused:Boolean ship:String}type LaunchRocketFirstStage{cores:[LaunchRocketFirstStageCore]}type LaunchRocketFirstStageCore{block:Int core:Core flight:Int gridfins:Boolean land_success:Boolean landing_intent:Boolean landing_type:String landing_vehicle:String legs:Boolean reused:Boolean}type Rocket{active:Boolean boosters:Int company:String cost_per_launch:Int country:String description:String diameter:Distance engines:RocketEngines first_flight:Date first_stage:RocketFirstStage height:Distance id:ID landing_legs:RocketLandingLegs mass:Mass name:String payload_weights:[RocketPayloadWeight]second_stage:RocketSecondStage stages:Int success_rate_pct:Int type:String wikipedia:String}type RocketEngines{number:Int type:String version:String layout:String engine_loss_max:String propellant_1:String propellant_2:String thrust_sea_level:Force thrust_vacuum:Force thrust_to_weight:Float}type RocketFirstStage{burn_time_sec:Int engines:Int fuel_amount_tons:Float reusable:Boolean thrust_sea_level:Force thrust_vacuum:Force}type RocketLandingLegs{number:Int material:String}type RocketPayloadWeight{id:String kg:Int lb:Int name:String}type RocketSecondStage{burn_time_sec:Int engines:Int fuel_amount_tons:Float payloads:RocketSecondStagePayloads thrust:Force}type RocketSecondStagePayloads{option_1:String composite_fairing:RocketSecondStagePayloadCompositeFairing}type RocketSecondStagePayloadCompositeFairing{height:Distance diameter:Distance}type LaunchRocketSecondStage{block:Int payloads:[Payload]}type Payload{customers:[String]id:ID manufacturer:String nationality:String norad_id:[Int]orbit_params:PayloadOrbitParams orbit:String payload_mass_kg:Float payload_mass_lbs:Float payload_type:String reused:Boolean}type PayloadOrbitParams{apoapsis_km:Float arg_of_pericenter:Float eccentricity:Float epoch:Date inclination_deg:Float lifespan_years:Float longitude:Float mean_anomaly:Float mean_motion:Float periapsis_km:Float period_min:Float raan:Float reference_system:String regime:String semi_major_axis_km:Float}type LaunchTelemetry{flight_club:String}type Ship{abs:Int active:Boolean attempted_landings:Int class:Int course_deg:Int home_port:String id:ID image:String imo:Int missions:[ShipMission]mmsi:Int model:String name:String position:ShipLocation roles:[String]speed_kn:Float status:String successful_landings:Int type:String url:String weight_kg:Int weight_lbs:Int year_built:Int}type ShipMission{flight:String name:String}type ShipLocation{latitude:Float longitude:Float}type HistoriesResult{result:Result data:[History]}type Result{totalCount:Int}type Landpad{attempted_landings:String details:String full_name:String id:ID landing_type:String location:Location status:String successful_landings:String wikipedia:String}type Location{latitude:Float longitude:Float name:String region:String}\"\"\"\"\"\" input LaunchFind{apoapsis_km:Float block:Int cap_serial:String capsule_reuse:String core_flight:Int core_reuse:String core_serial:String customer:String eccentricity:Float end:Date epoch:Date fairings_recovered:String fairings_recovery_attempt:String fairings_reuse:String fairings_reused:String fairings_ship:String gridfins:String id:ID inclination_deg:Float land_success:String landing_intent:String landing_type:String landing_vehicle:String launch_date_local:Date launch_date_utc:Date launch_success:String launch_year:String legs:String lifespan_years:Float longitude:Float manufacturer:String mean_motion:Float mission_id:String mission_name:String nationality:String norad_id:Int orbit:String payload_id:String payload_type:String periapsis_km:Float period_min:Float raan:Float reference_system:String regime:String reused:String rocket_id:String rocket_name:String rocket_type:String second_stage_block:String semi_major_axis_km:Float ship:String side_core1_reuse:String side_core2_reuse:String site_id:String site_name_long:String site_name:String start:Date tbd:String tentative_max_precision:String tentative:String}type LaunchesPastResult{result:Result data:[Launch]}type Launchpad{attempted_launches:Int details:String id:ID location:Location name:String status:String successful_launches:Int vehicles_launched:[Rocket]wikipedia:String}\"\"\"\"\"\" input MissionsFind{id:ID manufacturer:String name:String payload_id:String}type Mission{description:String id:ID manufacturers:[String]name:String twitter:String website:String wikipedia:String payloads:[Payload]}type MissionResult{result:Result data:[Mission]}\"\"\"\"\"\" input PayloadsFind{apoapsis_km:Float customer:String eccentricity:Float epoch:Date inclination_deg:Float lifespan_years:Float longitude:Float manufacturer:String mean_motion:Float nationality:String norad_id:Int orbit:String payload_id:ID payload_type:String periapsis_km:Float period_min:Float raan:Float reference_system:String regime:String reused:Boolean semi_major_axis_km:Float}type Roadster{apoapsis_au:Float details:String earth_distance_km:Float earth_distance_mi:Float eccentricity:Float epoch_jd:Float inclination:Float launch_date_unix:Date launch_date_utc:Date launch_mass_kg:Int launch_mass_lbs:Int longitude:Float mars_distance_km:Float mars_distance_mi:Float name:String norad_id:Int orbit_type:Float periapsis_arg:Float periapsis_au:Float period_days:Float semi_major_axis_au:Float speed_kph:Float speed_mph:Float wikipedia:String}type RocketsResult{result:Result data:[Rocket]}\"\"\"\"\"\" input ShipsFind{id:ID name:String model:String type:String role:String active:Boolean imo:Int mmsi:Int abs:Int class:Int weight_lbs:Int weight_kg:Int year_built:Int home_port:String status:String speed_kn:Int course_deg:Int latitude:Float longitude:Float successful_landings:Int attempted_landings:Int mission:String}type ShipsResult{result:Result data:[Ship]}type Mutation{\"\"\"delete data from the table: \"users\"\n\"\"\" delete_users(\"\"\"filter the rows which have to be deleted\"\"\" where:users_bool_exp!):users_mutation_response \"\"\"insert data into the table: \"users\"\n\"\"\" insert_users(\"\"\"the rows to be inserted\"\"\" objects:[users_insert_input!]!\"\"\"on conflict condition\"\"\" on_conflict:users_on_conflict):users_mutation_response \"\"\"update data of the table: \"users\"\n\"\"\" update_users(\"\"\"sets the columns of the filtered rows to the given values\"\"\" _set:users_set_input \"\"\"filter the rows which have to be updated\"\"\" where:users_bool_exp!):users_mutation_response}\"\"\"response of any mutation on the table \"users\"\n\"\"\" type users_mutation_response{\"\"\"number of affected rows by the mutation\"\"\" affected_rows:Int!\"\"\"data of the affected rows by the mutation\"\"\" returning:[users!]!}\"\"\"input type for inserting data into table \"users\"\n\"\"\" input users_insert_input{id:uuid name:String rocket:String timestamp:timestamptz twitter:String}\"\"\"on conflict condition type for table \"users\"\n\"\"\" input users_on_conflict{constraint:users_constraint!update_columns:[users_update_column!]!}\"\"\"unique or primary key constraints on table \"users\"\n\"\"\" enum users_constraint{\"\"\"unique or primary key constraint\"\"\" users_pkey}\"\"\"update columns of table \"users\"\n\"\"\" enum users_update_column{\"\"\"column name\"\"\" id \"\"\"column name\"\"\" name \"\"\"column name\"\"\" rocket \"\"\"column name\"\"\" timestamp \"\"\"column name\"\"\" twitter}\"\"\"input type for updating data in table \"users\"\n\"\"\" input users_set_input{id:uuid name:String rocket:String timestamp:timestamptz twitter:String}type Subscription{\"\"\"fetch data from the table: \"users\"\n\"\"\" users(\"\"\"distinct select on columns\"\"\" distinct_on:[users_select_column!]\"\"\"limit the nuber of rows returned\"\"\" limit:Int \"\"\"skip the first n rows. Use only with order_by\"\"\" offset:Int \"\"\"sort the rows by one or more columns\"\"\" order_by:[users_order_by!]\"\"\"filter the rows returned\"\"\" where:users_bool_exp):[users!]!\"\"\"fetch aggregated fields from the table: \"users\"\n\"\"\" users_aggregate(\"\"\"distinct select on columns\"\"\" distinct_on:[users_select_column!]\"\"\"limit the nuber of rows returned\"\"\" limit:Int \"\"\"skip the first n rows. Use only with order_by\"\"\" offset:Int \"\"\"sort the rows by one or more columns\"\"\" order_by:[users_order_by!]\"\"\"filter the rows returned\"\"\" where:users_bool_exp):users_aggregate!\"\"\"fetch data from the table: \"users\" using primary key columns\"\"\" users_by_pk(id:uuid!):users}\"\"\"conflict action\"\"\" enum conflict_action{\"\"\"ignore the insert on this row\"\"\" ignore \"\"\"update the row with the given values\"\"\" update}\"\"\"order by aggregate values of table \"users\"\n\"\"\" input users_aggregate_order_by{count:order_by max:users_max_order_by min:users_min_order_by}\"\"\"order by max() on columns of table \"users\"\n\"\"\" input users_max_order_by{name:order_by rocket:order_by timestamp:order_by twitter:order_by}\"\"\"order by min() on columns of table \"users\"\n\"\"\" input users_min_order_by{name:order_by rocket:order_by timestamp:order_by twitter:order_by}\"\"\"input type for inserting array relation for remote table \"users\"\n\"\"\" input users_arr_rel_insert_input{data:[users_insert_input!]!on_conflict:users_on_conflict}\"\"\"input type for inserting object relation for remote table \"users\"\n\"\"\" input users_obj_rel_insert_input{data:users_insert_input!on_conflict:users_on_conflict}scalar ObjectID type CoreMission{name:String flight:Int}","DataSources":[{"Kind":2,"RootNodes":[{"typeName":"Query","fieldNames":["users","users_aggregate","users_by_pk","capsules","capsulesPast","capsulesUpcoming","capsule","company","cores","coresPast","coresUpcoming","core","dragons","dragon","histories","historiesResult","history","landpads","landpad","launches","launchesPast","launchesPastResult","launchesUpcoming","launch","launchLatest","launchNext","launchpads","launchpad","missions","missionsResult","mission","payloads","payload","roadster","rockets","rocketsResult","rocket","ships","shipsResult","ship"]},{"typeName":"Mutation","fieldNames":["delete_users","insert_users","update_users"]},{"typeName":"Subscription","fieldNames":["users","users_aggregate","users_by_pk"]}],"ChildNodes":[{"typeName":"users","fieldNames":["id","name","rocket","timestamp","twitter"]},{"typeName":"users_aggregate","fieldNames":["aggregate","nodes"]},{"typeName":"users_aggregate_fields","fieldNames":["count","max","min"]},{"typeName":"users_max_fields","fieldNames":["name","rocket","timestamp","twitter"]},{"typeName":"users_min_fields","fieldNames":["name","rocket","timestamp","twitter"]},{"typeName":"Capsule","fieldNames":["id","landings","missions","original_launch","reuse_count","status","type","dragon"]},{"typeName":"CapsuleMission","fieldNames":["flight","name"]},{"typeName":"Dragon","fieldNames":["active","crew_capacity","description","diameter","dry_mass_kg","dry_mass_lb","first_flight","heat_shield","height_w_trunk","id","launch_payload_mass","launch_payload_vol","name","orbit_duration_yr","pressurized_capsule","return_payload_mass","return_payload_vol","sidewall_angle_deg","thrusters","trunk","type","wikipedia"]},{"typeName":"Distance","fieldNames":["feet","meters"]},{"typeName":"DragonHeatShield","fieldNames":["dev_partner","material","size_meters","temp_degrees"]},{"typeName":"Mass","fieldNames":["kg","lb"]},{"typeName":"Volume","fieldNames":["cubic_feet","cubic_meters"]},{"typeName":"DragonPressurizedCapsule","fieldNames":["payload_volume"]},{"typeName":"DragonThrust","fieldNames":["amount","fuel_1","fuel_2","pods","thrust","type"]},{"typeName":"Force","fieldNames":["kN","lbf"]},{"typeName":"DragonTrunk","fieldNames":["cargo","trunk_volume"]},{"typeName":"DragonTrunkCargo","fieldNames":["solar_array","unpressurized_cargo"]},{"typeName":"Info","fieldNames":["ceo","coo","cto_propulsion","cto","employees","founded","founder","headquarters","launch_sites","links","name","summary","test_sites","valuation","vehicles"]},{"typeName":"Address","fieldNames":["address","city","state"]},{"typeName":"InfoLinks","fieldNames":["elon_twitter","flickr","twitter","website"]},{"typeName":"Core","fieldNames":["asds_attempts","asds_landings","block","id","missions","original_launch","reuse_count","rtls_attempts","rtls_landings","status","water_landing"]},{"typeName":"History","fieldNames":["details","event_date_unix","event_date_utc","id","links","title","flight"]},{"typeName":"Link","fieldNames":["article","reddit","wikipedia"]},{"typeName":"Launch","fieldNames":["details","id","is_tentative","launch_date_local","launch_date_unix","launch_date_utc","launch_site","launch_success","launch_year","links","mission_id","mission_name","rocket","static_fire_date_unix","static_fire_date_utc","telemetry","tentative_max_precision","upcoming","ships"]},{"typeName":"LaunchSite","fieldNames":["site_id","site_name_long","site_name"]},{"typeName":"LaunchLinks","fieldNames":["article_link","flickr_images","mission_patch_small","mission_patch","presskit","reddit_campaign","reddit_launch","reddit_media","reddit_recovery","video_link","wikipedia"]},{"typeName":"LaunchRocket","fieldNames":["fairings","first_stage","rocket_name","rocket_type","rocket","second_stage"]},{"typeName":"LaunchRocketFairings","fieldNames":["recovered","recovery_attempt","reused","ship"]},{"typeName":"LaunchRocketFirstStage","fieldNames":["cores"]},{"typeName":"LaunchRocketFirstStageCore","fieldNames":["block","core","flight","gridfins","land_success","landing_intent","landing_type","landing_vehicle","legs","reused"]},{"typeName":"Rocket","fieldNames":["active","boosters","company","cost_per_launch","country","description","diameter","engines","first_flight","first_stage","height","id","landing_legs","mass","name","payload_weights","second_stage","stages","success_rate_pct","type","wikipedia"]},{"typeName":"RocketEngines","fieldNames":["number","type","version","layout","engine_loss_max","propellant_1","propellant_2","thrust_sea_level","thrust_vacuum","thrust_to_weight"]},{"typeName":"RocketFirstStage","fieldNames":["burn_time_sec","engines","fuel_amount_tons","reusable","thrust_sea_level","thrust_vacuum"]},{"typeName":"RocketLandingLegs","fieldNames":["number","material"]},{"typeName":"RocketPayloadWeight","fieldNames":["id","kg","lb","name"]},{"typeName":"RocketSecondStage","fieldNames":["burn_time_sec","engines","fuel_amount_tons","payloads","thrust"]},{"typeName":"RocketSecondStagePayloads","fieldNames":["option_1","composite_fairing"]},{"typeName":"RocketSecondStagePayloadCompositeFairing","fieldNames":["height","diameter"]},{"typeName":"LaunchRocketSecondStage","fieldNames":["block","payloads"]},{"typeName":"Payload","fieldNames":["customers","id","manufacturer","nationality","norad_id","orbit_params","orbit","payload_mass_kg","payload_mass_lbs","payload_type","reused"]},{"typeName":"PayloadOrbitParams","fieldNames":["apoapsis_km","arg_of_pericenter","eccentricity","epoch","inclination_deg","lifespan_years","longitude","mean_anomaly","mean_motion","periapsis_km","period_min","raan","reference_system","regime","semi_major_axis_km"]},{"typeName":"LaunchTelemetry","fieldNames":["flight_club"]},{"typeName":"Ship","fieldNames":["abs","active","attempted_landings","class","course_deg","home_port","id","image","imo","missions","mmsi","model","name","position","roles","speed_kn","status","successful_landings","type","url","weight_kg","weight_lbs","year_built"]},{"typeName":"ShipMission","fieldNames":["flight","name"]},{"typeName":"ShipLocation","fieldNames":["latitude","longitude"]},{"typeName":"HistoriesResult","fieldNames":["result","data"]},{"typeName":"Result","fieldNames":["totalCount"]},{"typeName":"Landpad","fieldNames":["attempted_landings","details","full_name","id","landing_type","location","status","successful_landings","wikipedia"]},{"typeName":"Location","fieldNames":["latitude","longitude","name","region"]},{"typeName":"LaunchesPastResult","fieldNames":["result","data"]},{"typeName":"Launchpad","fieldNames":["attempted_launches","details","id","location","name","status","successful_launches","vehicles_launched","wikipedia"]},{"typeName":"Mission","fieldNames":["description","id","manufacturers","name","twitter","website","wikipedia","payloads"]},{"typeName":"MissionResult","fieldNames":["result","data"]},{"typeName":"Roadster","fieldNames":["apoapsis_au","details","earth_distance_km","earth_distance_mi","eccentricity","epoch_jd","inclination","launch_date_unix","launch_date_utc","launch_mass_kg","launch_mass_lbs","longitude","mars_distance_km","mars_distance_mi","name","norad_id","orbit_type","periapsis_arg","periapsis_au","period_days","semi_major_axis_au","speed_kph","speed_mph","wikipedia"]},{"typeName":"RocketsResult","fieldNames":["result","data"]},{"typeName":"ShipsResult","fieldNames":["result","data"]},{"typeName":"users_mutation_response","fieldNames":["affected_rows","returning"]},{"typeName":"CoreMission","fieldNames":["name","flight"]}],"Custom":{"Fetch":{"url":{"kind":1,"staticVariableContent":"","placeholderVariableName":"","environmentVariableDefaultValue":"https://api.spacex.land/graphql/","environmentVariableName":"SPACEX_URL"},"method":1,"body":{"kind":0,"environmentVariableDefaultValue":"","environmentVariableName":"","placeholderVariableName":"","staticVariableContent":""},"header":{},"query":[]},"Subscription":{"Enabled":true,"URL":{"kind":0,"environmentVariableDefaultValue":"","environmentVariableName":"","placeholderVariableName":"","staticVariableContent":""}},"Federation":{"Enabled":false,"ServiceSDL":""},"UpstreamSchema":"type Query {\n  \"fetch data from the table: \\\"users\\\"\"\n  users(\n    \"distinct select on columns\"\n    distinct_on: [users_select_column!]\n    \"limit the nuber of rows returned\"\n    limit: Int\n    \"skip the first n rows. Use only with order_by\"\n    offset: Int\n    \"sort the rows by one or more columns\"\n    order_by: [users_order_by!]\n    \"filter the rows returned\"\n    where: users_bool_exp\n  ): [users!]!\n  \"fetch aggregated fields from the table: \\\"users\\\"\"\n  users_aggregate(\n    \"distinct select on columns\"\n    distinct_on: [users_select_column!]\n    \"limit the nuber of rows returned\"\n    limit: Int\n    \"skip the first n rows. Use only with order_by\"\n    offset: Int\n    \"sort the rows by one or more columns\"\n    order_by: [users_order_by!]\n    \"filter the rows returned\"\n    where: users_bool_exp\n  ): users_aggregate!\n  \"fetch data from the table: \\\"users\\\" using primary key columns\"\n  users_by_pk(id: uuid!): users\n  capsules(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String): [Capsule]\n  capsulesPast(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String): [Capsule]\n  capsulesUpcoming(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String): [Capsule]\n  capsule(id: ID!): Capsule\n  company: Info\n  cores(find: CoresFind, limit: Int, offset: Int, order: String, sort: String): [Core]\n  coresPast(find: CoresFind, limit: Int, offset: Int, order: String, sort: String): [Core]\n  coresUpcoming(find: CoresFind, limit: Int, offset: Int, order: String, sort: String): [Core]\n  core(id: ID!): Core\n  dragons(limit: Int, offset: Int): [Dragon]\n  dragon(id: ID!): Dragon\n  histories(find: HistoryFind, limit: Int, offset: Int, order: String, sort: String): [History]\n  historiesResult(find: HistoryFind, limit: Int, offset: Int, order: String, sort: String): HistoriesResult\n  history(id: ID!): History\n  landpads(limit: Int, offset: Int): [Landpad]\n  landpad(id: ID!): Landpad\n  launches(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): [Launch]\n  launchesPast(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): [Launch]\n  launchesPastResult(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): LaunchesPastResult\n  launchesUpcoming(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): [Launch]\n  launch(id: ID!): Launch\n  launchLatest(offset: Int): Launch\n  launchNext(offset: Int): Launch\n  launchpads(limit: Int, offset: Int): [Launchpad]\n  launchpad(id: ID!): Launchpad\n  missions(find: MissionsFind, limit: Int, offset: Int): [Mission]\n  missionsResult(find: MissionsFind, limit: Int, offset: Int): MissionResult\n  mission(id: ID!): Mission\n  payloads(find: PayloadsFind, limit: Int, offset: Int, order: String, sort: String): [Payload]\n  payload(id: ID!): Payload\n  roadster: Roadster\n  rockets(limit: Int, offset: Int): [Rocket]\n  rocketsResult(limit: Int, offset: Int): RocketsResult\n  rocket(id: ID!): Rocket\n  ships(find: ShipsFind, limit: Int, offset: Int, order: String, sort: String): [Ship]\n  shipsResult(find: ShipsFind, limit: Int, offset: Int, order: String, sort: String): ShipsResult\n  ship(id: ID!): Ship\n}\n\n\"\"\"\nselect columns of table \"users\"\n\"\"\"\nenum users_select_column {\n  \"\"\"column name\"\"\"\n  id\n  \"\"\"column name\"\"\"\n  name\n  \"\"\"column name\"\"\"\n  rocket\n  \"\"\"column name\"\"\"\n  timestamp\n  \"\"\"column name\"\"\"\n  twitter\n}\n\n\"\"\"\nordering options when selecting data from \"users\"\n\"\"\"\ninput users_order_by {\n  id: order_by\n  name: order_by\n  rocket: order_by\n  timestamp: order_by\n  twitter: order_by\n}\n\n\"\"\"column ordering options\"\"\"\nenum order_by {\n  \"\"\"in the ascending order, nulls last\"\"\"\n  asc\n  \"\"\"in the ascending order, nulls first\"\"\"\n  asc_nulls_first\n  \"\"\"in the ascending order, nulls last\"\"\"\n  asc_nulls_last\n  \"\"\"in the descending order, nulls first\"\"\"\n  desc\n  \"\"\"in the descending order, nulls first\"\"\"\n  desc_nulls_first\n  \"\"\"in the descending order, nulls last\"\"\"\n  desc_nulls_last\n}\n\n\"\"\"Boolean expression to filter rows from the table \"users\". All fields are combined with a logical 'AND'.\"\"\"\ninput users_bool_exp {\n  _and: [users_bool_exp]\n  _not: users_bool_exp\n  _or: [users_bool_exp]\n  id: uuid_comparison_exp\n  name: String_comparison_exp\n  rocket: String_comparison_exp\n  timestamp: timestamptz_comparison_exp\n  twitter: String_comparison_exp\n}\n\n\"\"\"expression to compare columns of type uuid. All fields are combined with logical 'AND'.\"\"\"\ninput uuid_comparison_exp {\n  _eq: uuid\n  _gt: uuid\n  _gte: uuid\n  _in: [uuid!]\n  _is_null: Boolean\n  _lt: uuid\n  _lte: uuid\n  _neq: uuid\n  _nin: [uuid!]\n}\n\nscalar uuid\n\n\"\"\"expression to compare columns of type String. All fields are combined with logical 'AND'.\"\"\"\ninput String_comparison_exp {\n  _eq: String\n  _gt: String\n  _gte: String\n  _ilike: String\n  _in: [String!]\n  _is_null: Boolean\n  _like: String\n  _lt: String\n  _lte: String\n  _neq: String\n  _nilike: String\n  _nin: [String!]\n  _nlike: String\n  _nsimilar: String\n  _similar: String\n}\n\n\"\"\"expression to compare columns of type timestamptz. All fields are combined with logical 'AND'.\"\"\"\ninput timestamptz_comparison_exp {\n  _eq: timestamptz\n  _gt: timestamptz\n  _gte: timestamptz\n  _in: [timestamptz!]\n  _is_null: Boolean\n  _lt: timestamptz\n  _lte: timestamptz\n  _neq: timestamptz\n  _nin: [timestamptz!]\n}\n\nscalar timestamptz\n\n\"\"\"\ncolumns and relationships of \"users\"\n\"\"\"\ntype users {\n  id: uuid!\n  name: String\n  rocket: String\n  timestamp: timestamptz!\n  twitter: String\n}\n\n\"\"\"\naggregated selection of \"users\"\n\"\"\"\ntype users_aggregate {\n  aggregate: users_aggregate_fields\n  nodes: [users!]!\n}\n\n\"\"\"\naggregate fields of \"users\"\n\"\"\"\ntype users_aggregate_fields {\n  count(columns: [users_select_column!], distinct: Boolean): Int\n  max: users_max_fields\n  min: users_min_fields\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype users_max_fields {\n  name: String\n  rocket: String\n  timestamp: timestamptz\n  twitter: String\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype users_min_fields {\n  name: String\n  rocket: String\n  timestamp: timestamptz\n  twitter: String\n}\n\n\"\"\"\"\"\"\ninput CapsulesFind {\n  id: ID\n  landings: Int\n  mission: String\n  original_launch: Date\n  reuse_count: Int\n  status: String\n  type: String\n}\n\n\"\"\"\"\"\"\nscalar Date\n\n\"\"\"\"\"\"\ntype Capsule {\n  id: ID\n  landings: Int\n  missions: [CapsuleMission]\n  original_launch: Date\n  reuse_count: Int\n  status: String\n  type: String\n  dragon: Dragon\n}\n\n\"\"\"\"\"\"\ntype CapsuleMission {\n  flight: Int\n  name: String\n}\n\n\"\"\"\"\"\"\ntype Dragon {\n  active: Boolean\n  crew_capacity: Int\n  description: String\n  diameter: Distance\n  dry_mass_kg: Int\n  dry_mass_lb: Int\n  first_flight: String\n  heat_shield: DragonHeatShield\n  height_w_trunk: Distance\n  id: ID\n  launch_payload_mass: Mass\n  launch_payload_vol: Volume\n  name: String\n  orbit_duration_yr: Int\n  pressurized_capsule: DragonPressurizedCapsule\n  return_payload_mass: Mass\n  return_payload_vol: Volume\n  sidewall_angle_deg: Float\n  thrusters: [DragonThrust]\n  trunk: DragonTrunk\n  type: String\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype Distance {\n  feet: Float\n  meters: Float\n}\n\n\"\"\"\"\"\"\ntype DragonHeatShield {\n  dev_partner: String\n  material: String\n  size_meters: Float\n  temp_degrees: Int\n}\n\n\"\"\"\"\"\"\ntype Mass {\n  kg: Int\n  lb: Int\n}\n\n\"\"\"\"\"\"\ntype Volume {\n  cubic_feet: Int\n  cubic_meters: Int\n}\n\n\"\"\"\"\"\"\ntype DragonPressurizedCapsule {\n  payload_volume: Volume\n}\n\n\"\"\"\"\"\"\ntype DragonThrust {\n  amount: Int\n  fuel_1: String\n  fuel_2: String\n  pods: Int\n  thrust: Force\n  type: String\n}\n\n\"\"\"\"\"\"\ntype Force {\n  kN: Float\n  lbf: Float\n}\n\n\"\"\"\"\"\"\ntype DragonTrunk {\n  cargo: DragonTrunkCargo\n  trunk_volume: Volume\n}\n\n\"\"\"\"\"\"\ntype DragonTrunkCargo {\n  solar_array: Int\n  unpressurized_cargo: Boolean\n}\n\n\"\"\"\"\"\"\ntype Info {\n  ceo: String\n  coo: String\n  cto_propulsion: String\n  cto: String\n  employees: Int\n  founded: Int\n  founder: String\n  headquarters: Address\n  launch_sites: Int\n  links: InfoLinks\n  name: String\n  summary: String\n  test_sites: Int\n  valuation: Float\n  vehicles: Int\n}\n\n\"\"\"\"\"\"\ntype Address {\n  address: String\n  city: String\n  state: String\n}\n\n\"\"\"\"\"\"\ntype InfoLinks {\n  elon_twitter: String\n  flickr: String\n  twitter: String\n  website: String\n}\n\n\"\"\"\"\"\"\ninput CoresFind {\n  asds_attempts: Int\n  asds_landings: Int\n  block: Int\n  id: String\n  missions: String\n  original_launch: Date\n  reuse_count: Int\n  rtls_attempts: Int\n  rtls_landings: Int\n  status: String\n  water_landing: Boolean\n}\n\n\"\"\"\"\"\"\ntype Core {\n  asds_attempts: Int\n  asds_landings: Int\n  block: Int\n  id: ID\n  missions: [CapsuleMission]\n  original_launch: Date\n  reuse_count: Int\n  rtls_attempts: Int\n  rtls_landings: Int\n  status: String\n  water_landing: Boolean\n}\n\n\"\"\"\"\"\"\ninput HistoryFind {\n  end: Date\n  flight_number: Int\n  id: ID\n  start: Date\n}\n\n\"\"\"\"\"\"\ntype History {\n  details: String\n  event_date_unix: Date\n  event_date_utc: Date\n  id: ID\n  links: Link\n  title: String\n  flight: Launch\n}\n\n\"\"\"\"\"\"\ntype Link {\n  article: String\n  reddit: String\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype Launch {\n  details: String\n  id: ID\n  is_tentative: Boolean\n  launch_date_local: Date\n  launch_date_unix: Date\n  launch_date_utc: Date\n  launch_site: LaunchSite\n  launch_success: Boolean\n  launch_year: String\n  links: LaunchLinks\n  mission_id: [String]\n  mission_name: String\n  rocket: LaunchRocket\n  static_fire_date_unix: Date\n  static_fire_date_utc: Date\n  telemetry: LaunchTelemetry\n  tentative_max_precision: String\n  upcoming: Boolean\n  ships: [Ship]\n}\n\n\"\"\"\"\"\"\ntype LaunchSite {\n  site_id: String\n  site_name_long: String\n  site_name: String\n}\n\n\"\"\"\"\"\"\ntype LaunchLinks {\n  article_link: String\n  flickr_images: [String]\n  mission_patch_small: String\n  mission_patch: String\n  presskit: String\n  reddit_campaign: String\n  reddit_launch: String\n  reddit_media: String\n  reddit_recovery: String\n  video_link: String\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype LaunchRocket {\n  fairings: LaunchRocketFairings\n  first_stage: LaunchRocketFirstStage\n  rocket_name: String\n  rocket_type: String\n  rocket: Rocket\n  second_stage: LaunchRocketSecondStage\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketFairings {\n  recovered: Boolean\n  recovery_attempt: Boolean\n  reused: Boolean\n  ship: String\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketFirstStage {\n  cores: [LaunchRocketFirstStageCore]\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketFirstStageCore {\n  block: Int\n  core: Core\n  flight: Int\n  gridfins: Boolean\n  land_success: Boolean\n  landing_intent: Boolean\n  landing_type: String\n  landing_vehicle: String\n  legs: Boolean\n  reused: Boolean\n}\n\n\"\"\"\"\"\"\ntype Rocket {\n  active: Boolean\n  boosters: Int\n  company: String\n  cost_per_launch: Int\n  country: String\n  description: String\n  diameter: Distance\n  engines: RocketEngines\n  first_flight: Date\n  first_stage: RocketFirstStage\n  height: Distance\n  id: ID\n  landing_legs: RocketLandingLegs\n  mass: Mass\n  name: String\n  payload_weights: [RocketPayloadWeight]\n  second_stage: RocketSecondStage\n  stages: Int\n  success_rate_pct: Int\n  type: String\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype RocketEngines {\n  number: Int\n  type: String\n  version: String\n  layout: String\n  engine_loss_max: String\n  propellant_1: String\n  propellant_2: String\n  thrust_sea_level: Force\n  thrust_vacuum: Force\n  thrust_to_weight: Float\n}\n\n\"\"\"\"\"\"\ntype RocketFirstStage {\n  burn_time_sec: Int\n  engines: Int\n  fuel_amount_tons: Float\n  reusable: Boolean\n  thrust_sea_level: Force\n  thrust_vacuum: Force\n}\n\n\"\"\"\"\"\"\ntype RocketLandingLegs {\n  number: Int\n  material: String\n}\n\n\"\"\"\"\"\"\ntype RocketPayloadWeight {\n  id: String\n  kg: Int\n  lb: Int\n  name: String\n}\n\n\"\"\"\"\"\"\ntype RocketSecondStage {\n  burn_time_sec: Int\n  engines: Int\n  fuel_amount_tons: Float\n  payloads: RocketSecondStagePayloads\n  thrust: Force\n}\n\n\"\"\"\"\"\"\ntype RocketSecondStagePayloads {\n  option_1: String\n  composite_fairing: RocketSecondStagePayloadCompositeFairing\n}\n\n\"\"\"\"\"\"\ntype RocketSecondStagePayloadCompositeFairing {\n  height: Distance\n  diameter: Distance\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketSecondStage {\n  block: Int\n  payloads: [Payload]\n}\n\n\"\"\"\"\"\"\ntype Payload {\n  customers: [String]\n  id: ID\n  manufacturer: String\n  nationality: String\n  norad_id: [Int]\n  orbit_params: PayloadOrbitParams\n  orbit: String\n  payload_mass_kg: Float\n  payload_mass_lbs: Float\n  payload_type: String\n  reused: Boolean\n}\n\n\"\"\"\"\"\"\ntype PayloadOrbitParams {\n  apoapsis_km: Float\n  arg_of_pericenter: Float\n  eccentricity: Float\n  epoch: Date\n  inclination_deg: Float\n  lifespan_years: Float\n  longitude: Float\n  mean_anomaly: Float\n  mean_motion: Float\n  periapsis_km: Float\n  period_min: Float\n  raan: Float\n  reference_system: String\n  regime: String\n  semi_major_axis_km: Float\n}\n\n\"\"\"\"\"\"\ntype LaunchTelemetry {\n  flight_club: String\n}\n\n\"\"\"\"\"\"\ntype Ship {\n  abs: Int\n  active: Boolean\n  attempted_landings: Int\n  class: Int\n  course_deg: Int\n  home_port: String\n  id: ID\n  image: String\n  imo: Int\n  missions: [ShipMission]\n  mmsi: Int\n  model: String\n  name: String\n  position: ShipLocation\n  roles: [String]\n  speed_kn: Float\n  status: String\n  successful_landings: Int\n  type: String\n  url: String\n  weight_kg: Int\n  weight_lbs: Int\n  year_built: Int\n}\n\n\"\"\"\"\"\"\ntype ShipMission {\n  flight: String\n  name: String\n}\n\n\"\"\"\"\"\"\ntype ShipLocation {\n  latitude: Float\n  longitude: Float\n}\n\n\"\"\"\"\"\"\ntype HistoriesResult {\n  result: Result\n  data: [History]\n}\n\n\"\"\"\"\"\"\ntype Result {\n  totalCount: Int\n}\n\n\"\"\"\"\"\"\ntype Landpad {\n  attempted_landings: String\n  details: String\n  full_name: String\n  id: ID\n  landing_type: String\n  location: Location\n  status: String\n  successful_landings: String\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype Location {\n  latitude: Float\n  longitude: Float\n  name: String\n  region: String\n}\n\n\"\"\"\"\"\"\ninput LaunchFind {\n  apoapsis_km: Float\n  block: Int\n  cap_serial: String\n  capsule_reuse: String\n  core_flight: Int\n  core_reuse: String\n  core_serial: String\n  customer: String\n  eccentricity: Float\n  end: Date\n  epoch: Date\n  fairings_recovered: String\n  fairings_recovery_attempt: String\n  fairings_reuse: String\n  fairings_reused: String\n  fairings_ship: String\n  gridfins: String\n  id: ID\n  inclination_deg: Float\n  land_success: String\n  landing_intent: String\n  landing_type: String\n  landing_vehicle: String\n  launch_date_local: Date\n  launch_date_utc: Date\n  launch_success: String\n  launch_year: String\n  legs: String\n  lifespan_years: Float\n  longitude: Float\n  manufacturer: String\n  mean_motion: Float\n  mission_id: String\n  mission_name: String\n  nationality: String\n  norad_id: Int\n  orbit: String\n  payload_id: String\n  payload_type: String\n  periapsis_km: Float\n  period_min: Float\n  raan: Float\n  reference_system: String\n  regime: String\n  reused: String\n  rocket_id: String\n  rocket_name: String\n  rocket_type: String\n  second_stage_block: String\n  semi_major_axis_km: Float\n  ship: String\n  side_core1_reuse: String\n  side_core2_reuse: String\n  site_id: String\n  site_name_long: String\n  site_name: String\n  start: Date\n  tbd: String\n  tentative_max_precision: String\n  tentative: String\n}\n\n\"\"\"\"\"\"\ntype LaunchesPastResult {\n  result: Result\n  data: [Launch]\n}\n\n\"\"\"\"\"\"\ntype Launchpad {\n  attempted_launches: Int\n  details: String\n  id: ID\n  location: Location\n  name: String\n  status: String\n  successful_launches: Int\n  vehicles_launched: [Rocket]\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ninput MissionsFind {\n  id: ID\n  manufacturer: String\n  name: String\n  payload_id: String\n}\n\n\"\"\"\"\"\"\ntype Mission {\n  description: String\n  id: ID\n  manufacturers: [String]\n  name: String\n  twitter: String\n  website: String\n  wikipedia: String\n  payloads: [Payload]\n}\n\n\"\"\"\"\"\"\ntype MissionResult {\n  result: Result\n  data: [Mission]\n}\n\n\"\"\"\"\"\"\ninput PayloadsFind {\n  apoapsis_km: Float\n  customer: String\n  eccentricity: Float\n  epoch: Date\n  inclination_deg: Float\n  lifespan_years: Float\n  longitude: Float\n  manufacturer: String\n  mean_motion: Float\n  nationality: String\n  norad_id: Int\n  orbit: String\n  payload_id: ID\n  payload_type: String\n  periapsis_km: Float\n  period_min: Float\n  raan: Float\n  reference_system: String\n  regime: String\n  reused: Boolean\n  semi_major_axis_km: Float\n}\n\n\"\"\"\"\"\"\ntype Roadster {\n  apoapsis_au: Float\n  details: String\n  earth_distance_km: Float\n  earth_distance_mi: Float\n  eccentricity: Float\n  epoch_jd: Float\n  inclination: Float\n  launch_date_unix: Date\n  launch_date_utc: Date\n  launch_mass_kg: Int\n  launch_mass_lbs: Int\n  longitude: Float\n  mars_distance_km: Float\n  mars_distance_mi: Float\n  name: String\n  norad_id: Int\n  orbit_type: Float\n  periapsis_arg: Float\n  periapsis_au: Float\n  period_days: Float\n  semi_major_axis_au: Float\n  speed_kph: Float\n  speed_mph: Float\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype RocketsResult {\n  result: Result\n  data: [Rocket]\n}\n\n\"\"\"\"\"\"\ninput ShipsFind {\n  id: ID\n  name: String\n  model: String\n  type: String\n  role: String\n  active: Boolean\n  imo: Int\n  mmsi: Int\n  abs: Int\n  class: Int\n  weight_lbs: Int\n  weight_kg: Int\n  year_built: Int\n  home_port: String\n  status: String\n  speed_kn: Int\n  course_deg: Int\n  latitude: Float\n  longitude: Float\n  successful_landings: Int\n  attempted_landings: Int\n  mission: String\n}\n\n\"\"\"\"\"\"\ntype ShipsResult {\n  result: Result\n  data: [Ship]\n}\n\ntype Mutation {\n  \"delete data from the table: \\\"users\\\"\"\n  delete_users(\n    \"filter the rows which have to be deleted\"\n    where: users_bool_exp!\n  ): users_mutation_response\n  \"insert data into the table: \\\"users\\\"\"\n  insert_users(\n    \"the rows to be inserted\"\n    objects: [users_insert_input!]!\n    \"on conflict condition\"\n    on_conflict: users_on_conflict\n  ): users_mutation_response\n  \"update data of the table: \\\"users\\\"\"\n  update_users(\n    \"sets the columns of the filtered rows to the given values\"\n    _set: users_set_input\n    \"filter the rows which have to be updated\"\n    where: users_bool_exp!\n  ): users_mutation_response\n}\n\n\"\"\"\nresponse of any mutation on the table \"users\"\n\"\"\"\ntype users_mutation_response {\n  \"number of affected rows by the mutation\"\n  affected_rows: Int!\n  \"data of the affected rows by the mutation\"\n  returning: [users!]!\n}\n\n\"\"\"\ninput type for inserting data into table \"users\"\n\"\"\"\ninput users_insert_input {\n  id: uuid\n  name: String\n  rocket: String\n  timestamp: timestamptz\n  twitter: String\n}\n\n\"\"\"\non conflict condition type for table \"users\"\n\"\"\"\ninput users_on_conflict {\n  constraint: users_constraint!\n  update_columns: [users_update_column!]!\n}\n\n\"\"\"\nunique or primary key constraints on table \"users\"\n\"\"\"\nenum users_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  users_pkey\n}\n\n\"\"\"\nupdate columns of table \"users\"\n\"\"\"\nenum users_update_column {\n  \"\"\"column name\"\"\"\n  id\n  \"\"\"column name\"\"\"\n  name\n  \"\"\"column name\"\"\"\n  rocket\n  \"\"\"column name\"\"\"\n  timestamp\n  \"\"\"column name\"\"\"\n  twitter\n}\n\n\"\"\"\ninput type for updating data in table \"users\"\n\"\"\"\ninput users_set_input {\n  id: uuid\n  name: String\n  rocket: String\n  timestamp: timestamptz\n  twitter: String\n}\n\ntype Subscription {\n  \"fetch data from the table: \\\"users\\\"\"\n  users(\n    \"distinct select on columns\"\n    distinct_on: [users_select_column!]\n    \"limit the nuber of rows returned\"\n    limit: Int\n    \"skip the first n rows. Use only with order_by\"\n    offset: Int\n    \"sort the rows by one or more columns\"\n    order_by: [users_order_by!]\n    \"filter the rows returned\"\n    where: users_bool_exp\n  ): [users!]!\n  \"fetch aggregated fields from the table: \\\"users\\\"\"\n  users_aggregate(\n    \"distinct select on columns\"\n    distinct_on: [users_select_column!]\n    \"limit the nuber of rows returned\"\n    limit: Int\n    \"skip the first n rows. Use only with order_by\"\n    offset: Int\n    \"sort the rows by one or more columns\"\n    order_by: [users_order_by!]\n    \"filter the rows returned\"\n    where: users_bool_exp\n  ): users_aggregate!\n  \"fetch data from the table: \\\"users\\\" using primary key columns\"\n  users_by_pk(id: uuid!): users\n}\n\n\"\"\"conflict action\"\"\"\nenum conflict_action {\n  \"\"\"ignore the insert on this row\"\"\"\n  ignore\n  \"\"\"update the row with the given values\"\"\"\n  update\n}\n\n\"\"\"\norder by aggregate values of table \"users\"\n\"\"\"\ninput users_aggregate_order_by {\n  count: order_by\n  max: users_max_order_by\n  min: users_min_order_by\n}\n\n\"\"\"\norder by max() on columns of table \"users\"\n\"\"\"\ninput users_max_order_by {\n  name: order_by\n  rocket: order_by\n  timestamp: order_by\n  twitter: order_by\n}\n\n\"\"\"\norder by min() on columns of table \"users\"\n\"\"\"\ninput users_min_order_by {\n  name: order_by\n  rocket: order_by\n  timestamp: order_by\n  twitter: order_by\n}\n\n\"\"\"\ninput type for inserting array relation for remote table \"users\"\n\"\"\"\ninput users_arr_rel_insert_input {\n  data: [users_insert_input!]!\n  on_conflict: users_on_conflict\n}\n\n\"\"\"\ninput type for inserting object relation for remote table \"users\"\n\"\"\"\ninput users_obj_rel_insert_input {\n  data: users_insert_input!\n  on_conflict: users_on_conflict\n}\n\n\"\"\"\"\"\"\nscalar ObjectID\n\n\"\"\"\"\"\"\ntype CoreMission {\n  name: String\n  flight: Int\n}\n"},"Directives":[]}],"Fields":[{"typeName":"Query","fieldName":"users","argumentsConfiguration":[{"name":"distinct_on","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order_by","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"where","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"users_aggregate","argumentsConfiguration":[{"name":"distinct_on","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order_by","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"where","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"users_by_pk","argumentsConfiguration":[{"name":"id","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"capsules","argumentsConfiguration":[{"name":"find","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"sort","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"capsulesPast","argumentsConfiguration":[{"name":"find","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"sort","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"capsulesUpcoming","argumentsConfiguration":[{"name":"find","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"sort","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"capsule","argumentsConfiguration":[{"name":"id","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"cores","argumentsConfiguration":[{"name":"find","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"sort","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"coresPast","argumentsConfiguration":[{"name":"find","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"sort","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"coresUpcoming","argumentsConfiguration":[{"name":"find","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"sort","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"core","argumentsConfiguration":[{"name":"id","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"dragons","argumentsConfiguration":[{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"dragon","argumentsConfiguration":[{"name":"id","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"histories","argumentsConfiguration":[{"name":"find","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"sort","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"historiesResult","argumentsConfiguration":[{"name":"find","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"sort","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"history","argumentsConfiguration":[{"name":"id","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"landpads","argumentsConfiguration":[{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"landpad","argumentsConfiguration":[{"name":"id","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"launches","argumentsConfiguration":[{"name":"find","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"sort","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"launchesPast","argumentsConfiguration":[{"name":"find","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"sort","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"launchesPastResult","argumentsConfiguration":[{"name":"find","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"sort","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"launchesUpcoming","argumentsConfiguration":[{"name":"find","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"sort","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"launch","argumentsConfiguration":[{"name":"id","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"launchLatest","argumentsConfiguration":[{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"launchNext","argumentsConfiguration":[{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"launchpads","argumentsConfiguration":[{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"launchpad","argumentsConfiguration":[{"name":"id","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"missions","argumentsConfiguration":[{"name":"find","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"missionsResult","argumentsConfiguration":[{"name":"find","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"mission","argumentsConfiguration":[{"name":"id","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"payloads","argumentsConfiguration":[{"name":"find","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"sort","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"payload","argumentsConfiguration":[{"name":"id","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"rockets","argumentsConfiguration":[{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"rocketsResult","argumentsConfiguration":[{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"rocket","argumentsConfiguration":[{"name":"id","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"ships","argumentsConfiguration":[{"name":"find","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"sort","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"shipsResult","argumentsConfiguration":[{"name":"find","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"sort","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Query","fieldName":"ship","argumentsConfiguration":[{"name":"id","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"users_aggregate_fields","fieldName":"count","argumentsConfiguration":[{"name":"columns","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"distinct","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Mutation","fieldName":"delete_users","argumentsConfiguration":[{"name":"where","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Mutation","fieldName":"insert_users","argumentsConfiguration":[{"name":"objects","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"on_conflict","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Mutation","fieldName":"update_users","argumentsConfiguration":[{"name":"_set","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"where","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Subscription","fieldName":"users","argumentsConfiguration":[{"name":"distinct_on","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order_by","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"where","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Subscription","fieldName":"users_aggregate","argumentsConfiguration":[{"name":"distinct_on","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"limit","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"offset","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"order_by","sourceType":1,"sourcePath":[],"renderConfiguration":0},{"name":"where","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]},{"typeName":"Subscription","fieldName":"users_by_pk","argumentsConfiguration":[{"name":"id","sourceType":1,"sourcePath":[],"renderConfiguration":0}],"disableDefaultFieldMapping":false,"path":[],"requiresFields":[]}],"Types":[]}`),
			IsPublic:            true,
			Placeholders: []v2wundergraphapi.Placeholder{
				{
					Name:     "SPACEX_URL",
					Optional: true,
				},
			},
		},
	}
	out := &bytes.Buffer{}
	err := manifest.renderIntegrations(dependencies, out)
	assert.NoError(t, err)
	goldie.Assert(t, "render_integrations", out.Bytes())
}
