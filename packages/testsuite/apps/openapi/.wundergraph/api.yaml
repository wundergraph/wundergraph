openapi: 3.0.0
info:
  title: Notes API
  description: An API which supports storing and retrieving notes
  version: '0.1'

servers:
  - url: http://api.example.com/v1
    description: Example Server

paths:
  /notes/reminders/{numberToShow}:
    get:
      summary: Returns JSON array of reminders
      operationId: reminders
      parameters:
        - name: numberToShow
          in: path
          required: true
          description: The number of reminders to show
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        '200':
          description: JSON data for a note
          content:
            application/json:
              schema:
                type: object
        '400':
          description: The specified note ID is invalid (not a number).
        default:
          description: Unexpected error
  /notes/all:
    get:
      summary: Returns a note by ID
      operationId: all
      responses:
        '200':
          description: A note object
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    text:
                      type: string

  /notes/echo_data:
    get:
      operationId: echoData
      parameters:
        - name: data
          in: query
          type: object
          required: true
          properties:
            input:
              type: object
              additionalProperties: true
      responses:
        '200':
          application/json:
            schema:
              type: object
              properties:
                jsonData:
                  type: object
                  additionalProperties: true

  /notes/note/{noteID}:
    get:
      summary: Returns a note by ID
      operationId: noteByID
      parameters:
        - name: noteID
          in: path
          required: true
          description: Note unique identifier
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: A note object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  text:
                    type: string
                  jsonData:
                    type: object
                    additionalProperties: true
        '400':
          description: The specified note ID is invalid (not a number).
        '404':
          description: A note with the specified ID was not found.
        default:
          description: Unexpected error
    delete:
      summary: Deletes a note by its ID
      operationId: deleteNote
      parameters:
        - name: noteID
          in: path
          required: true
          description: Note unique identifier
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '204':
          description: No content
        '400':
          description: The specified note ID is invalid (not a number).
        '404':
          description: A note with the specified ID was not found.
        default:
          description: Unexpected error

  /notes/new:
    post:
      summary: Creates a new note
      operationId: newNote
      parameters:
        - name: text
          in: body
          required: true
          description: Note text
          schema:
            type: string
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64

  /time:
    get:
      summary: Returns the current time
      responses:
        '200':
          description: The current time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Time'
  /bigint:
    post:
      summary: Returns a big integer
      parameters:
        - name: quantity
          in: body
          required: true
          description: quantity
          schema:
            type: object
            properties:
              quantity:
                type: integer
                format: int64
      responses:
        '200':
          description: A big integer
          content:
            application/json:
              schema:
                type: object
                properties:
                  quantity:
                    type: integer
                    format: int64

components:
  schemas:
    Time:
      type: object
      properties:
        hours:
          type: number
        minutes:
          type: number
        seconds:
          type: number
      required: ['hours', 'minutes', 'seconds']
