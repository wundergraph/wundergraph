// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Introspection introspect GraphQL API with interface type definitions 1`] = `
GraphQLApi {
  "DataSources": [
    {
      "ChildNodes": [
        {
          "fieldNames": [
            "id",
            "displayName",
            "isLoggedIn",
          ],
          "typeName": "api_User",
        },
        {
          "fieldNames": [
            "id",
            "displayName",
            "isLoggedIn",
            "hasVerifiedEmail",
          ],
          "typeName": "api_RegisteredUser",
        },
      ],
      "Custom": {
        "Federation": {
          "Enabled": false,
          "ServiceSDL": "",
        },
        "Fetch": {
          "baseUrl": {
            "environmentVariableDefaultValue": "",
            "environmentVariableName": "",
            "kind": 0,
            "placeholderVariableName": "",
            "staticVariableContent": "",
          },
          "body": {
            "environmentVariableDefaultValue": "",
            "environmentVariableName": "",
            "kind": 0,
            "placeholderVariableName": "",
            "staticVariableContent": "",
          },
          "header": {},
          "mTLS": undefined,
          "method": 1,
          "path": {
            "environmentVariableDefaultValue": "",
            "environmentVariableName": "",
            "kind": 0,
            "placeholderVariableName": "",
            "staticVariableContent": "",
          },
          "query": [],
          "upstreamAuthentication": undefined,
          "url": {
            "environmentVariableDefaultValue": "",
            "environmentVariableName": "",
            "kind": 0,
            "placeholderVariableName": "",
            "staticVariableContent": "http://localhost:8080/graphql",
          },
          "urlEncodeBody": false,
        },
        "Subscription": {
          "Enabled": false,
          "URL": {
            "environmentVariableDefaultValue": "",
            "environmentVariableName": "",
            "kind": 0,
            "placeholderVariableName": "",
            "staticVariableContent": "http://localhost:8080/graphql",
          },
          "UseSSE": false,
        },
        "UpstreamSchema": "type Query {
  user: User
}

interface User {
  id: ID!
  displayName: String!
  isLoggedIn: Boolean!
}

type RegisteredUser implements User {
  id: ID!
  displayName: String!
  isLoggedIn: Boolean!
  hasVerifiedEmail: Boolean!
}",
      },
      "Directives": [],
      "Kind": 2,
      "RootNodes": [
        {
          "fieldNames": [
            "api_user",
          ],
          "typeName": "Query",
        },
      ],
    },
  ],
  "DefaultFlushInterval": 500,
  "Fields": [
    {
      "argumentsConfiguration": [],
      "disableDefaultFieldMapping": false,
      "fieldName": "api_user",
      "path": [
        "user",
      ],
      "requiresFields": [],
      "typeName": "Query",
      "unescapeResponseJson": false,
    },
  ],
  "Schema": "type Query {
  api_user: api_User
}

interface api_User {
  id: ID!
  displayName: String!
  isLoggedIn: Boolean!
}

type api_RegisteredUser implements api_User {
  id: ID!
  displayName: String!
  isLoggedIn: Boolean!
  hasVerifiedEmail: Boolean!
}",
  "Types": [
    {
      "renameTo": "User",
      "typeName": "api_User",
    },
    {
      "renameTo": "RegisteredUser",
      "typeName": "api_RegisteredUser",
    },
  ],
  "interpolateVariableDefinitionAsJSON": [],
}
`;
